//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestJokeService.JokeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Joke", Namespace="http://jokes.org/")]
    [System.SerializableAttribute()]
    public partial class Joke : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        private int GradeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="Joke Remember ServiceSoap", Namespace="http://jokes.org/", ConfigurationName="JokeService.JokeRememberServiceSoap")]
    public interface JokeRememberServiceSoap {
        
        // CODEGEN: Generating message contract since element name GetJokesResult from namespace http://jokes.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/GetJokes", ReplyAction="*")]
        TestJokeService.JokeService.GetJokesResponse GetJokes(TestJokeService.JokeService.GetJokesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/GetJokes", ReplyAction="*")]
        System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokesResponse> GetJokesAsync(TestJokeService.JokeService.GetJokesRequest request);
        
        // CODEGEN: Generating message contract since element name GetJokeByIdResult from namespace http://jokes.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/GetJokeById", ReplyAction="*")]
        TestJokeService.JokeService.GetJokeByIdResponse GetJokeById(TestJokeService.JokeService.GetJokeByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/GetJokeById", ReplyAction="*")]
        System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokeByIdResponse> GetJokeByIdAsync(TestJokeService.JokeService.GetJokeByIdRequest request);
        
        // CODEGEN: Generating message contract since element name joke from namespace http://jokes.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/AddJoke", ReplyAction="*")]
        TestJokeService.JokeService.AddJokeResponse AddJoke(TestJokeService.JokeService.AddJokeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/AddJoke", ReplyAction="*")]
        System.Threading.Tasks.Task<TestJokeService.JokeService.AddJokeResponse> AddJokeAsync(TestJokeService.JokeService.AddJokeRequest request);
        
        // CODEGEN: Generating message contract since element name joke from namespace http://jokes.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/UpdateJoke", ReplyAction="*")]
        TestJokeService.JokeService.UpdateJokeResponse UpdateJoke(TestJokeService.JokeService.UpdateJokeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/UpdateJoke", ReplyAction="*")]
        System.Threading.Tasks.Task<TestJokeService.JokeService.UpdateJokeResponse> UpdateJokeAsync(TestJokeService.JokeService.UpdateJokeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/DeleteJoke", ReplyAction="*")]
        void DeleteJoke(int jokeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://jokes.org/DeleteJoke", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteJokeAsync(int jokeId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetJokesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetJokes", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.GetJokesRequestBody Body;
        
        public GetJokesRequest() {
        }
        
        public GetJokesRequest(TestJokeService.JokeService.GetJokesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetJokesRequestBody {
        
        public GetJokesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetJokesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetJokesResponse", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.GetJokesResponseBody Body;
        
        public GetJokesResponse() {
        }
        
        public GetJokesResponse(TestJokeService.JokeService.GetJokesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://jokes.org/")]
    public partial class GetJokesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TestJokeService.JokeService.Joke[] GetJokesResult;
        
        public GetJokesResponseBody() {
        }
        
        public GetJokesResponseBody(TestJokeService.JokeService.Joke[] GetJokesResult) {
            this.GetJokesResult = GetJokesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetJokeByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetJokeById", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.GetJokeByIdRequestBody Body;
        
        public GetJokeByIdRequest() {
        }
        
        public GetJokeByIdRequest(TestJokeService.JokeService.GetJokeByIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://jokes.org/")]
    public partial class GetJokeByIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int jokeId;
        
        public GetJokeByIdRequestBody() {
        }
        
        public GetJokeByIdRequestBody(int jokeId) {
            this.jokeId = jokeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetJokeByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetJokeByIdResponse", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.GetJokeByIdResponseBody Body;
        
        public GetJokeByIdResponse() {
        }
        
        public GetJokeByIdResponse(TestJokeService.JokeService.GetJokeByIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://jokes.org/")]
    public partial class GetJokeByIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TestJokeService.JokeService.Joke GetJokeByIdResult;
        
        public GetJokeByIdResponseBody() {
        }
        
        public GetJokeByIdResponseBody(TestJokeService.JokeService.Joke GetJokeByIdResult) {
            this.GetJokeByIdResult = GetJokeByIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddJokeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddJoke", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.AddJokeRequestBody Body;
        
        public AddJokeRequest() {
        }
        
        public AddJokeRequest(TestJokeService.JokeService.AddJokeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://jokes.org/")]
    public partial class AddJokeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TestJokeService.JokeService.Joke joke;
        
        public AddJokeRequestBody() {
        }
        
        public AddJokeRequestBody(TestJokeService.JokeService.Joke joke) {
            this.joke = joke;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddJokeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddJokeResponse", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.AddJokeResponseBody Body;
        
        public AddJokeResponse() {
        }
        
        public AddJokeResponse(TestJokeService.JokeService.AddJokeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddJokeResponseBody {
        
        public AddJokeResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateJokeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateJoke", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.UpdateJokeRequestBody Body;
        
        public UpdateJokeRequest() {
        }
        
        public UpdateJokeRequest(TestJokeService.JokeService.UpdateJokeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://jokes.org/")]
    public partial class UpdateJokeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TestJokeService.JokeService.Joke joke;
        
        public UpdateJokeRequestBody() {
        }
        
        public UpdateJokeRequestBody(TestJokeService.JokeService.Joke joke) {
            this.joke = joke;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateJokeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateJokeResponse", Namespace="http://jokes.org/", Order=0)]
        public TestJokeService.JokeService.UpdateJokeResponseBody Body;
        
        public UpdateJokeResponse() {
        }
        
        public UpdateJokeResponse(TestJokeService.JokeService.UpdateJokeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateJokeResponseBody {
        
        public UpdateJokeResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface JokeRememberServiceSoapChannel : TestJokeService.JokeService.JokeRememberServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JokeRememberServiceSoapClient : System.ServiceModel.ClientBase<TestJokeService.JokeService.JokeRememberServiceSoap>, TestJokeService.JokeService.JokeRememberServiceSoap {
        
        public JokeRememberServiceSoapClient() {
        }
        
        public JokeRememberServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JokeRememberServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JokeRememberServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JokeRememberServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestJokeService.JokeService.GetJokesResponse TestJokeService.JokeService.JokeRememberServiceSoap.GetJokes(TestJokeService.JokeService.GetJokesRequest request) {
            return base.Channel.GetJokes(request);
        }
        
        public TestJokeService.JokeService.Joke[] GetJokes() {
            TestJokeService.JokeService.GetJokesRequest inValue = new TestJokeService.JokeService.GetJokesRequest();
            inValue.Body = new TestJokeService.JokeService.GetJokesRequestBody();
            TestJokeService.JokeService.GetJokesResponse retVal = ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).GetJokes(inValue);
            return retVal.Body.GetJokesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokesResponse> TestJokeService.JokeService.JokeRememberServiceSoap.GetJokesAsync(TestJokeService.JokeService.GetJokesRequest request) {
            return base.Channel.GetJokesAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokesResponse> GetJokesAsync() {
            TestJokeService.JokeService.GetJokesRequest inValue = new TestJokeService.JokeService.GetJokesRequest();
            inValue.Body = new TestJokeService.JokeService.GetJokesRequestBody();
            return ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).GetJokesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestJokeService.JokeService.GetJokeByIdResponse TestJokeService.JokeService.JokeRememberServiceSoap.GetJokeById(TestJokeService.JokeService.GetJokeByIdRequest request) {
            return base.Channel.GetJokeById(request);
        }
        
        public TestJokeService.JokeService.Joke GetJokeById(int jokeId) {
            TestJokeService.JokeService.GetJokeByIdRequest inValue = new TestJokeService.JokeService.GetJokeByIdRequest();
            inValue.Body = new TestJokeService.JokeService.GetJokeByIdRequestBody();
            inValue.Body.jokeId = jokeId;
            TestJokeService.JokeService.GetJokeByIdResponse retVal = ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).GetJokeById(inValue);
            return retVal.Body.GetJokeByIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokeByIdResponse> TestJokeService.JokeService.JokeRememberServiceSoap.GetJokeByIdAsync(TestJokeService.JokeService.GetJokeByIdRequest request) {
            return base.Channel.GetJokeByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestJokeService.JokeService.GetJokeByIdResponse> GetJokeByIdAsync(int jokeId) {
            TestJokeService.JokeService.GetJokeByIdRequest inValue = new TestJokeService.JokeService.GetJokeByIdRequest();
            inValue.Body = new TestJokeService.JokeService.GetJokeByIdRequestBody();
            inValue.Body.jokeId = jokeId;
            return ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).GetJokeByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestJokeService.JokeService.AddJokeResponse TestJokeService.JokeService.JokeRememberServiceSoap.AddJoke(TestJokeService.JokeService.AddJokeRequest request) {
            return base.Channel.AddJoke(request);
        }
        
        public void AddJoke(TestJokeService.JokeService.Joke joke) {
            TestJokeService.JokeService.AddJokeRequest inValue = new TestJokeService.JokeService.AddJokeRequest();
            inValue.Body = new TestJokeService.JokeService.AddJokeRequestBody();
            inValue.Body.joke = joke;
            TestJokeService.JokeService.AddJokeResponse retVal = ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).AddJoke(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestJokeService.JokeService.AddJokeResponse> TestJokeService.JokeService.JokeRememberServiceSoap.AddJokeAsync(TestJokeService.JokeService.AddJokeRequest request) {
            return base.Channel.AddJokeAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestJokeService.JokeService.AddJokeResponse> AddJokeAsync(TestJokeService.JokeService.Joke joke) {
            TestJokeService.JokeService.AddJokeRequest inValue = new TestJokeService.JokeService.AddJokeRequest();
            inValue.Body = new TestJokeService.JokeService.AddJokeRequestBody();
            inValue.Body.joke = joke;
            return ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).AddJokeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestJokeService.JokeService.UpdateJokeResponse TestJokeService.JokeService.JokeRememberServiceSoap.UpdateJoke(TestJokeService.JokeService.UpdateJokeRequest request) {
            return base.Channel.UpdateJoke(request);
        }
        
        public void UpdateJoke(TestJokeService.JokeService.Joke joke) {
            TestJokeService.JokeService.UpdateJokeRequest inValue = new TestJokeService.JokeService.UpdateJokeRequest();
            inValue.Body = new TestJokeService.JokeService.UpdateJokeRequestBody();
            inValue.Body.joke = joke;
            TestJokeService.JokeService.UpdateJokeResponse retVal = ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).UpdateJoke(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestJokeService.JokeService.UpdateJokeResponse> TestJokeService.JokeService.JokeRememberServiceSoap.UpdateJokeAsync(TestJokeService.JokeService.UpdateJokeRequest request) {
            return base.Channel.UpdateJokeAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestJokeService.JokeService.UpdateJokeResponse> UpdateJokeAsync(TestJokeService.JokeService.Joke joke) {
            TestJokeService.JokeService.UpdateJokeRequest inValue = new TestJokeService.JokeService.UpdateJokeRequest();
            inValue.Body = new TestJokeService.JokeService.UpdateJokeRequestBody();
            inValue.Body.joke = joke;
            return ((TestJokeService.JokeService.JokeRememberServiceSoap)(this)).UpdateJokeAsync(inValue);
        }
        
        public void DeleteJoke(int jokeId) {
            base.Channel.DeleteJoke(jokeId);
        }
        
        public System.Threading.Tasks.Task DeleteJokeAsync(int jokeId) {
            return base.Channel.DeleteJokeAsync(jokeId);
        }
    }
}
